#include <cmath>
#include <iostream>
#include <string.h>
using namespace std;

struct Point
{
                int x, y;
};

double distance (Point P1, Point P2)
{
                int value = pow(abs(P1.x-P2.x),2) + pow(abs(P1.y - P2.y),2);
                double sum = sqrt(value);

                return sum;
}

int main()
{
                Point a[] = {{4,4},{-2,-2},{-3,-4},{-1,3},{2,3},{-4,0},{1,1},{-1,-1},{3,-1},{-4,2},{-2,4}};
                //Point a[] ={{7,7},{1,100},{4,8},{7,7}};
                int i , j;
                int  p1_x, p2_x;
                int  p1_y, p2_y;
                double min_sum = 100000000;
                for(i= 0; i<10; i++)
                {
                                for(j = i+1; j< 11; j++) {
                                                double value= distance(a[i], a[j]);
                                                if(value < min_sum)
                                                {
                                                                min_sum = value;
                                                                p1_x = a[i].x;
                                                                p1_y = a[i].y;
                                                                p2_x= a[j].x;
                                                                p2_y = a[j].y;
                                                }
                                }
                }
                std::cout<<"Distance="<< min_sum<<",";
                std::cout<<"Closest Pair=["<<p1_x<<","<<p1_y<<"]"<<",["<<p2_x<<","<<p2_y<<"]";
                return 0;
}
